// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: billy.proto

package proto

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeekRequest_Whence int32

const (
	SeekRequest_SEEK_START   SeekRequest_Whence = 0
	SeekRequest_SEEK_CURRENT SeekRequest_Whence = 1
	SeekRequest_SEEK_END     SeekRequest_Whence = 2
)

// Enum value maps for SeekRequest_Whence.
var (
	SeekRequest_Whence_name = map[int32]string{
		0: "SEEK_START",
		1: "SEEK_CURRENT",
		2: "SEEK_END",
	}
	SeekRequest_Whence_value = map[string]int32{
		"SEEK_START":   0,
		"SEEK_CURRENT": 1,
		"SEEK_END":     2,
	}
)

func (x SeekRequest_Whence) Enum() *SeekRequest_Whence {
	p := new(SeekRequest_Whence)
	*p = x
	return p
}

func (x SeekRequest_Whence) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeekRequest_Whence) Descriptor() protoreflect.EnumDescriptor {
	return file_billy_proto_enumTypes[0].Descriptor()
}

func (SeekRequest_Whence) Type() protoreflect.EnumType {
	return &file_billy_proto_enumTypes[0]
}

func (x SeekRequest_Whence) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeekRequest_Whence.Descriptor instead.
func (SeekRequest_Whence) EnumDescriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{9, 0}
}

type FileDescriptorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Opaque id that will be returned with the response.
	// Can be used to pipeline multiple requests that might be answered in a different order.
	RequestId int64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Request:
	//	*FileDescriptorRequest_Open
	//	*FileDescriptorRequest_Close
	//	*FileDescriptorRequest_Read
	//	*FileDescriptorRequest_ReadAt
	//	*FileDescriptorRequest_Write
	//	*FileDescriptorRequest_WriteAt
	//	*FileDescriptorRequest_Seek
	//	*FileDescriptorRequest_Lock
	//	*FileDescriptorRequest_Unlock
	//	*FileDescriptorRequest_Truncate
	Request isFileDescriptorRequest_Request `protobuf_oneof:"request"`
}

func (x *FileDescriptorRequest) Reset() {
	*x = FileDescriptorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDescriptorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDescriptorRequest) ProtoMessage() {}

func (x *FileDescriptorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDescriptorRequest.ProtoReflect.Descriptor instead.
func (*FileDescriptorRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{0}
}

func (x *FileDescriptorRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (m *FileDescriptorRequest) GetRequest() isFileDescriptorRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *FileDescriptorRequest) GetOpen() *OpenRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Open); ok {
		return x.Open
	}
	return nil
}

func (x *FileDescriptorRequest) GetClose() *CloseRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Close); ok {
		return x.Close
	}
	return nil
}

func (x *FileDescriptorRequest) GetRead() *ReadRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Read); ok {
		return x.Read
	}
	return nil
}

func (x *FileDescriptorRequest) GetReadAt() *ReadAtRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_ReadAt); ok {
		return x.ReadAt
	}
	return nil
}

func (x *FileDescriptorRequest) GetWrite() *WriteRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Write); ok {
		return x.Write
	}
	return nil
}

func (x *FileDescriptorRequest) GetWriteAt() *WriteAtRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_WriteAt); ok {
		return x.WriteAt
	}
	return nil
}

func (x *FileDescriptorRequest) GetSeek() *SeekRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Seek); ok {
		return x.Seek
	}
	return nil
}

func (x *FileDescriptorRequest) GetLock() *LockRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Lock); ok {
		return x.Lock
	}
	return nil
}

func (x *FileDescriptorRequest) GetUnlock() *UnlockRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Unlock); ok {
		return x.Unlock
	}
	return nil
}

func (x *FileDescriptorRequest) GetTruncate() *TruncateRequest {
	if x, ok := x.GetRequest().(*FileDescriptorRequest_Truncate); ok {
		return x.Truncate
	}
	return nil
}

type isFileDescriptorRequest_Request interface {
	isFileDescriptorRequest_Request()
}

type FileDescriptorRequest_Open struct {
	Open *OpenRequest `protobuf:"bytes,2,opt,name=open,proto3,oneof"`
}

type FileDescriptorRequest_Close struct {
	Close *CloseRequest `protobuf:"bytes,3,opt,name=close,proto3,oneof"`
}

type FileDescriptorRequest_Read struct {
	Read *ReadRequest `protobuf:"bytes,4,opt,name=read,proto3,oneof"`
}

type FileDescriptorRequest_ReadAt struct {
	ReadAt *ReadAtRequest `protobuf:"bytes,5,opt,name=read_at,json=readAt,proto3,oneof"`
}

type FileDescriptorRequest_Write struct {
	Write *WriteRequest `protobuf:"bytes,6,opt,name=write,proto3,oneof"`
}

type FileDescriptorRequest_WriteAt struct {
	WriteAt *WriteAtRequest `protobuf:"bytes,7,opt,name=write_at,json=writeAt,proto3,oneof"`
}

type FileDescriptorRequest_Seek struct {
	Seek *SeekRequest `protobuf:"bytes,8,opt,name=seek,proto3,oneof"`
}

type FileDescriptorRequest_Lock struct {
	Lock *LockRequest `protobuf:"bytes,9,opt,name=lock,proto3,oneof"`
}

type FileDescriptorRequest_Unlock struct {
	Unlock *UnlockRequest `protobuf:"bytes,10,opt,name=unlock,proto3,oneof"`
}

type FileDescriptorRequest_Truncate struct {
	Truncate *TruncateRequest `protobuf:"bytes,11,opt,name=truncate,proto3,oneof"`
}

func (*FileDescriptorRequest_Open) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_Close) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_Read) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_ReadAt) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_Write) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_WriteAt) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_Seek) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_Lock) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_Unlock) isFileDescriptorRequest_Request() {}

func (*FileDescriptorRequest_Truncate) isFileDescriptorRequest_Request() {}

type FileDescriptorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64          `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are assignable to Response:
	//	*FileDescriptorResponse_Read
	//	*FileDescriptorResponse_Write
	//	*FileDescriptorResponse_Seek
	Response isFileDescriptorResponse_Response `protobuf_oneof:"response"`
}

func (x *FileDescriptorResponse) Reset() {
	*x = FileDescriptorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDescriptorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDescriptorResponse) ProtoMessage() {}

func (x *FileDescriptorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDescriptorResponse.ProtoReflect.Descriptor instead.
func (*FileDescriptorResponse) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{1}
}

func (x *FileDescriptorResponse) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *FileDescriptorResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (m *FileDescriptorResponse) GetResponse() isFileDescriptorResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *FileDescriptorResponse) GetRead() *ReadResponse {
	if x, ok := x.GetResponse().(*FileDescriptorResponse_Read); ok {
		return x.Read
	}
	return nil
}

func (x *FileDescriptorResponse) GetWrite() *WriteResponse {
	if x, ok := x.GetResponse().(*FileDescriptorResponse_Write); ok {
		return x.Write
	}
	return nil
}

func (x *FileDescriptorResponse) GetSeek() *SeekResponse {
	if x, ok := x.GetResponse().(*FileDescriptorResponse_Seek); ok {
		return x.Seek
	}
	return nil
}

type isFileDescriptorResponse_Response interface {
	isFileDescriptorResponse_Response()
}

type FileDescriptorResponse_Read struct {
	Read *ReadResponse `protobuf:"bytes,3,opt,name=read,proto3,oneof"`
}

type FileDescriptorResponse_Write struct {
	Write *WriteResponse `protobuf:"bytes,4,opt,name=write,proto3,oneof"`
}

type FileDescriptorResponse_Seek struct {
	Seek *SeekResponse `protobuf:"bytes,5,opt,name=seek,proto3,oneof"`
}

func (*FileDescriptorResponse_Read) isFileDescriptorResponse_Response() {}

func (*FileDescriptorResponse_Write) isFileDescriptorResponse_Response() {}

func (*FileDescriptorResponse_Seek) isFileDescriptorResponse_Response() {}

type OpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ForReading    bool   `protobuf:"varint,2,opt,name=for_reading,json=forReading,proto3" json:"for_reading,omitempty"`
	ForWriting    bool   `protobuf:"varint,3,opt,name=for_writing,json=forWriting,proto3" json:"for_writing,omitempty"`
	Append        bool   `protobuf:"varint,4,opt,name=append,proto3" json:"append,omitempty"`
	AllowCreation bool   `protobuf:"varint,5,opt,name=allow_creation,json=allowCreation,proto3" json:"allow_creation,omitempty"`
	Exclusive     bool   `protobuf:"varint,6,opt,name=exclusive,proto3" json:"exclusive,omitempty"`
	Sync          bool   `protobuf:"varint,7,opt,name=sync,proto3" json:"sync,omitempty"`
	Truncate      bool   `protobuf:"varint,8,opt,name=truncate,proto3" json:"truncate,omitempty"`
	CreateMode    uint32 `protobuf:"varint,9,opt,name=create_mode,json=createMode,proto3" json:"create_mode,omitempty"`
}

func (x *OpenRequest) Reset() {
	*x = OpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRequest) ProtoMessage() {}

func (x *OpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRequest.ProtoReflect.Descriptor instead.
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{2}
}

func (x *OpenRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenRequest) GetForReading() bool {
	if x != nil {
		return x.ForReading
	}
	return false
}

func (x *OpenRequest) GetForWriting() bool {
	if x != nil {
		return x.ForWriting
	}
	return false
}

func (x *OpenRequest) GetAppend() bool {
	if x != nil {
		return x.Append
	}
	return false
}

func (x *OpenRequest) GetAllowCreation() bool {
	if x != nil {
		return x.AllowCreation
	}
	return false
}

func (x *OpenRequest) GetExclusive() bool {
	if x != nil {
		return x.Exclusive
	}
	return false
}

func (x *OpenRequest) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *OpenRequest) GetTruncate() bool {
	if x != nil {
		return x.Truncate
	}
	return false
}

func (x *OpenRequest) GetCreateMode() uint32 {
	if x != nil {
		return x.CreateMode
	}
	return 0
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{3}
}

func (x *ReadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReadAtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReadAtRequest) Reset() {
	*x = ReadAtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAtRequest) ProtoMessage() {}

func (x *ReadAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAtRequest.ProtoReflect.Descriptor instead.
func (*ReadAtRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{4}
}

func (x *ReadAtRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadAtRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Eof  bool   `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{5}
}

func (x *ReadResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReadResponse) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{6}
}

func (x *WriteRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteAtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteAtRequest) Reset() {
	*x = WriteAtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAtRequest) ProtoMessage() {}

func (x *WriteAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAtRequest.ProtoReflect.Descriptor instead.
func (*WriteAtRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{7}
}

func (x *WriteAtRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WriteAtRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumWritten int64 `protobuf:"varint,1,opt,name=num_written,json=numWritten,proto3" json:"num_written,omitempty"`
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{8}
}

func (x *WriteResponse) GetNumWritten() int64 {
	if x != nil {
		return x.NumWritten
	}
	return 0
}

type SeekRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64              `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Whence SeekRequest_Whence `protobuf:"varint,2,opt,name=whence,proto3,enum=com.github.Jille.billy_grpc.SeekRequest_Whence" json:"whence,omitempty"`
}

func (x *SeekRequest) Reset() {
	*x = SeekRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekRequest) ProtoMessage() {}

func (x *SeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekRequest.ProtoReflect.Descriptor instead.
func (*SeekRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{9}
}

func (x *SeekRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SeekRequest) GetWhence() SeekRequest_Whence {
	if x != nil {
		return x.Whence
	}
	return SeekRequest_SEEK_START
}

type SeekResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *SeekResponse) Reset() {
	*x = SeekResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekResponse) ProtoMessage() {}

func (x *SeekResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekResponse.ProtoReflect.Descriptor instead.
func (*SeekResponse) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{10}
}

func (x *SeekResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TruncateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *TruncateRequest) Reset() {
	*x = TruncateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateRequest) ProtoMessage() {}

func (x *TruncateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateRequest.ProtoReflect.Descriptor instead.
func (*TruncateRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{11}
}

func (x *TruncateRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{12}
}

type LockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{13}
}

type UnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockRequest) Reset() {
	*x = UnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockRequest) ProtoMessage() {}

func (x *UnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockRequest.ProtoReflect.Descriptor instead.
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{14}
}

type RenameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPath string `protobuf:"bytes,1,opt,name=old_path,json=oldPath,proto3" json:"old_path,omitempty"`
	NewPath string `protobuf:"bytes,2,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
}

func (x *RenameRequest) Reset() {
	*x = RenameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameRequest) ProtoMessage() {}

func (x *RenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameRequest.ProtoReflect.Descriptor instead.
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{15}
}

func (x *RenameRequest) GetOldPath() string {
	if x != nil {
		return x.OldPath
	}
	return ""
}

func (x *RenameRequest) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

type RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type MkdirAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode uint32 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *MkdirAllRequest) Reset() {
	*x = MkdirAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MkdirAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkdirAllRequest) ProtoMessage() {}

func (x *MkdirAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkdirAllRequest.ProtoReflect.Descriptor instead.
func (*MkdirAllRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{17}
}

func (x *MkdirAllRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MkdirAllRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type ReadDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ReadDirRequest) Reset() {
	*x = ReadDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDirRequest) ProtoMessage() {}

func (x *ReadDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDirRequest.ProtoReflect.Descriptor instead.
func (*ReadDirRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{18}
}

func (x *ReadDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ReadDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string]*StatResponse `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReadDirResponse) Reset() {
	*x = ReadDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDirResponse) ProtoMessage() {}

func (x *ReadDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDirResponse.ProtoReflect.Descriptor instead.
func (*ReadDirResponse) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{19}
}

func (x *ReadDirResponse) GetEntries() map[string]*StatResponse {
	if x != nil {
		return x.Entries
	}
	return nil
}

type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{20}
}

func (x *StatRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type StatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size  int64                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Mode  int32                  `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Mtime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=mtime,proto3" json:"mtime,omitempty"`
	IsDir bool                   `protobuf:"varint,4,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{21}
}

func (x *StatResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StatResponse) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *StatResponse) GetMtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

func (x *StatResponse) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type ChmodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode int32  `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *ChmodRequest) Reset() {
	*x = ChmodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChmodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChmodRequest) ProtoMessage() {}

func (x *ChmodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChmodRequest.ProtoReflect.Descriptor instead.
func (*ChmodRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{22}
}

func (x *ChmodRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ChmodRequest) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type ChownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Uid  int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid  int32  `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *ChownRequest) Reset() {
	*x = ChownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChownRequest) ProtoMessage() {}

func (x *ChownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChownRequest.ProtoReflect.Descriptor instead.
func (*ChownRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{23}
}

func (x *ChownRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ChownRequest) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ChownRequest) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

type ChtimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Atime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=mtime,proto3" json:"mtime,omitempty"`
}

func (x *ChtimesRequest) Reset() {
	*x = ChtimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChtimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChtimesRequest) ProtoMessage() {}

func (x *ChtimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChtimesRequest.ProtoReflect.Descriptor instead.
func (*ChtimesRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{24}
}

func (x *ChtimesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ChtimesRequest) GetAtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Atime
	}
	return nil
}

func (x *ChtimesRequest) GetMtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

type SymlinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Link   string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *SymlinkRequest) Reset() {
	*x = SymlinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymlinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymlinkRequest) ProtoMessage() {}

func (x *SymlinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymlinkRequest.ProtoReflect.Descriptor instead.
func (*SymlinkRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{25}
}

func (x *SymlinkRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *SymlinkRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type ReadlinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ReadlinkRequest) Reset() {
	*x = ReadlinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadlinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadlinkRequest) ProtoMessage() {}

func (x *ReadlinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadlinkRequest.ProtoReflect.Descriptor instead.
func (*ReadlinkRequest) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{26}
}

func (x *ReadlinkRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ReadlinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *ReadlinkResponse) Reset() {
	*x = ReadlinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billy_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadlinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadlinkResponse) ProtoMessage() {}

func (x *ReadlinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billy_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadlinkResponse.ProtoReflect.Descriptor instead.
func (*ReadlinkResponse) Descriptor() ([]byte, []int) {
	return file_billy_proto_rawDescGZIP(), []int{27}
}

func (x *ReadlinkResponse) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

var File_billy_proto protoreflect.FileDescriptor

var file_billy_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x05,
	0x0a, 0x15, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x41, 0x74,
	0x12, 0x41, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c,
	0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x12, 0x3e, 0x0a,
	0x04, 0x73, 0x65, 0x65, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x12, 0x3e, 0x0a,
	0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x44, 0x0a,
	0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x4a, 0x0a, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb5, 0x02, 0x0a, 0x16, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3f, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c,
	0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61,
	0x64, 0x12, 0x42, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69,
	0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x5f, 0x77,
	0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f,
	0x72, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6f,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6f, 0x66, 0x22, 0x22, 0x0a, 0x0c,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x3c, 0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30,
	0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e,
	0x22, 0xa8, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x65, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x77, 0x68, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x77, 0x68, 0x65, 0x6e, 0x63,
	0x65, 0x22, 0x38, 0x0a, 0x06, 0x57, 0x68, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x45, 0x45, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x45, 0x45, 0x4b, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x53, 0x45, 0x45, 0x4b, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x22, 0x26, 0x0a, 0x0c, 0x53,
	0x65, 0x65, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x0d, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x23, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x0f, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xcd, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64,
	0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x1a, 0x65, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a,
	0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x7f, 0x0a, 0x0c, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x22, 0x36, 0x0a, 0x0c, 0x43,
	0x68, 0x6d, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0e,
	0x43, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x61,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x2a, 0x0a, 0x10, 0x52,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x32, 0xa4, 0x09, 0x0a, 0x0c, 0x42, 0x69, 0x6c, 0x6c,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c,
	0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x04, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a,
	0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64,
	0x44, 0x69, 0x72, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69,
	0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x08, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x2c, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6b, 0x64, 0x69, 0x72,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x05, 0x43, 0x68, 0x6d, 0x6f, 0x64, 0x12, 0x29, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x6d, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06, 0x4c, 0x63, 0x68, 0x6f, 0x77, 0x6e, 0x12, 0x29, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x6f, 0x77, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x05, 0x43, 0x68, 0x6f, 0x77, 0x6e, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x6f, 0x77, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x07, 0x43, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x5e, 0x0a, 0x05, 0x4c, 0x73, 0x74, 0x61, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6d, 0x6c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c,
	0x6c, 0x65, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4a, 0x69, 0x6c, 0x6c, 0x65,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x23,
	0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x69, 0x6c,
	0x6c, 0x65, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_billy_proto_rawDescOnce sync.Once
	file_billy_proto_rawDescData = file_billy_proto_rawDesc
)

func file_billy_proto_rawDescGZIP() []byte {
	file_billy_proto_rawDescOnce.Do(func() {
		file_billy_proto_rawDescData = protoimpl.X.CompressGZIP(file_billy_proto_rawDescData)
	})
	return file_billy_proto_rawDescData
}

var file_billy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_billy_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_billy_proto_goTypes = []interface{}{
	(SeekRequest_Whence)(0),        // 0: com.github.Jille.billy_grpc.SeekRequest.Whence
	(*FileDescriptorRequest)(nil),  // 1: com.github.Jille.billy_grpc.FileDescriptorRequest
	(*FileDescriptorResponse)(nil), // 2: com.github.Jille.billy_grpc.FileDescriptorResponse
	(*OpenRequest)(nil),            // 3: com.github.Jille.billy_grpc.OpenRequest
	(*ReadRequest)(nil),            // 4: com.github.Jille.billy_grpc.ReadRequest
	(*ReadAtRequest)(nil),          // 5: com.github.Jille.billy_grpc.ReadAtRequest
	(*ReadResponse)(nil),           // 6: com.github.Jille.billy_grpc.ReadResponse
	(*WriteRequest)(nil),           // 7: com.github.Jille.billy_grpc.WriteRequest
	(*WriteAtRequest)(nil),         // 8: com.github.Jille.billy_grpc.WriteAtRequest
	(*WriteResponse)(nil),          // 9: com.github.Jille.billy_grpc.WriteResponse
	(*SeekRequest)(nil),            // 10: com.github.Jille.billy_grpc.SeekRequest
	(*SeekResponse)(nil),           // 11: com.github.Jille.billy_grpc.SeekResponse
	(*TruncateRequest)(nil),        // 12: com.github.Jille.billy_grpc.TruncateRequest
	(*CloseRequest)(nil),           // 13: com.github.Jille.billy_grpc.CloseRequest
	(*LockRequest)(nil),            // 14: com.github.Jille.billy_grpc.LockRequest
	(*UnlockRequest)(nil),          // 15: com.github.Jille.billy_grpc.UnlockRequest
	(*RenameRequest)(nil),          // 16: com.github.Jille.billy_grpc.RenameRequest
	(*RemoveRequest)(nil),          // 17: com.github.Jille.billy_grpc.RemoveRequest
	(*MkdirAllRequest)(nil),        // 18: com.github.Jille.billy_grpc.MkdirAllRequest
	(*ReadDirRequest)(nil),         // 19: com.github.Jille.billy_grpc.ReadDirRequest
	(*ReadDirResponse)(nil),        // 20: com.github.Jille.billy_grpc.ReadDirResponse
	(*StatRequest)(nil),            // 21: com.github.Jille.billy_grpc.StatRequest
	(*StatResponse)(nil),           // 22: com.github.Jille.billy_grpc.StatResponse
	(*ChmodRequest)(nil),           // 23: com.github.Jille.billy_grpc.ChmodRequest
	(*ChownRequest)(nil),           // 24: com.github.Jille.billy_grpc.ChownRequest
	(*ChtimesRequest)(nil),         // 25: com.github.Jille.billy_grpc.ChtimesRequest
	(*SymlinkRequest)(nil),         // 26: com.github.Jille.billy_grpc.SymlinkRequest
	(*ReadlinkRequest)(nil),        // 27: com.github.Jille.billy_grpc.ReadlinkRequest
	(*ReadlinkResponse)(nil),       // 28: com.github.Jille.billy_grpc.ReadlinkResponse
	nil,                            // 29: com.github.Jille.billy_grpc.ReadDirResponse.EntriesEntry
	(*status.Status)(nil),          // 30: google.rpc.Status
	(*timestamppb.Timestamp)(nil),  // 31: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 32: google.protobuf.Empty
}
var file_billy_proto_depIdxs = []int32{
	3,  // 0: com.github.Jille.billy_grpc.FileDescriptorRequest.open:type_name -> com.github.Jille.billy_grpc.OpenRequest
	13, // 1: com.github.Jille.billy_grpc.FileDescriptorRequest.close:type_name -> com.github.Jille.billy_grpc.CloseRequest
	4,  // 2: com.github.Jille.billy_grpc.FileDescriptorRequest.read:type_name -> com.github.Jille.billy_grpc.ReadRequest
	5,  // 3: com.github.Jille.billy_grpc.FileDescriptorRequest.read_at:type_name -> com.github.Jille.billy_grpc.ReadAtRequest
	7,  // 4: com.github.Jille.billy_grpc.FileDescriptorRequest.write:type_name -> com.github.Jille.billy_grpc.WriteRequest
	8,  // 5: com.github.Jille.billy_grpc.FileDescriptorRequest.write_at:type_name -> com.github.Jille.billy_grpc.WriteAtRequest
	10, // 6: com.github.Jille.billy_grpc.FileDescriptorRequest.seek:type_name -> com.github.Jille.billy_grpc.SeekRequest
	14, // 7: com.github.Jille.billy_grpc.FileDescriptorRequest.lock:type_name -> com.github.Jille.billy_grpc.LockRequest
	15, // 8: com.github.Jille.billy_grpc.FileDescriptorRequest.unlock:type_name -> com.github.Jille.billy_grpc.UnlockRequest
	12, // 9: com.github.Jille.billy_grpc.FileDescriptorRequest.truncate:type_name -> com.github.Jille.billy_grpc.TruncateRequest
	30, // 10: com.github.Jille.billy_grpc.FileDescriptorResponse.status:type_name -> google.rpc.Status
	6,  // 11: com.github.Jille.billy_grpc.FileDescriptorResponse.read:type_name -> com.github.Jille.billy_grpc.ReadResponse
	9,  // 12: com.github.Jille.billy_grpc.FileDescriptorResponse.write:type_name -> com.github.Jille.billy_grpc.WriteResponse
	11, // 13: com.github.Jille.billy_grpc.FileDescriptorResponse.seek:type_name -> com.github.Jille.billy_grpc.SeekResponse
	0,  // 14: com.github.Jille.billy_grpc.SeekRequest.whence:type_name -> com.github.Jille.billy_grpc.SeekRequest.Whence
	29, // 15: com.github.Jille.billy_grpc.ReadDirResponse.entries:type_name -> com.github.Jille.billy_grpc.ReadDirResponse.EntriesEntry
	31, // 16: com.github.Jille.billy_grpc.StatResponse.mtime:type_name -> google.protobuf.Timestamp
	31, // 17: com.github.Jille.billy_grpc.ChtimesRequest.atime:type_name -> google.protobuf.Timestamp
	31, // 18: com.github.Jille.billy_grpc.ChtimesRequest.mtime:type_name -> google.protobuf.Timestamp
	22, // 19: com.github.Jille.billy_grpc.ReadDirResponse.EntriesEntry.value:type_name -> com.github.Jille.billy_grpc.StatResponse
	1,  // 20: com.github.Jille.billy_grpc.BillyService.FileDescriptor:input_type -> com.github.Jille.billy_grpc.FileDescriptorRequest
	21, // 21: com.github.Jille.billy_grpc.BillyService.Stat:input_type -> com.github.Jille.billy_grpc.StatRequest
	16, // 22: com.github.Jille.billy_grpc.BillyService.Rename:input_type -> com.github.Jille.billy_grpc.RenameRequest
	17, // 23: com.github.Jille.billy_grpc.BillyService.Remove:input_type -> com.github.Jille.billy_grpc.RemoveRequest
	19, // 24: com.github.Jille.billy_grpc.BillyService.ReadDir:input_type -> com.github.Jille.billy_grpc.ReadDirRequest
	18, // 25: com.github.Jille.billy_grpc.BillyService.MkdirAll:input_type -> com.github.Jille.billy_grpc.MkdirAllRequest
	23, // 26: com.github.Jille.billy_grpc.BillyService.Chmod:input_type -> com.github.Jille.billy_grpc.ChmodRequest
	24, // 27: com.github.Jille.billy_grpc.BillyService.Lchown:input_type -> com.github.Jille.billy_grpc.ChownRequest
	24, // 28: com.github.Jille.billy_grpc.BillyService.Chown:input_type -> com.github.Jille.billy_grpc.ChownRequest
	25, // 29: com.github.Jille.billy_grpc.BillyService.Chtimes:input_type -> com.github.Jille.billy_grpc.ChtimesRequest
	21, // 30: com.github.Jille.billy_grpc.BillyService.Lstat:input_type -> com.github.Jille.billy_grpc.StatRequest
	26, // 31: com.github.Jille.billy_grpc.BillyService.Symlink:input_type -> com.github.Jille.billy_grpc.SymlinkRequest
	27, // 32: com.github.Jille.billy_grpc.BillyService.Readlink:input_type -> com.github.Jille.billy_grpc.ReadlinkRequest
	2,  // 33: com.github.Jille.billy_grpc.BillyService.FileDescriptor:output_type -> com.github.Jille.billy_grpc.FileDescriptorResponse
	22, // 34: com.github.Jille.billy_grpc.BillyService.Stat:output_type -> com.github.Jille.billy_grpc.StatResponse
	32, // 35: com.github.Jille.billy_grpc.BillyService.Rename:output_type -> google.protobuf.Empty
	32, // 36: com.github.Jille.billy_grpc.BillyService.Remove:output_type -> google.protobuf.Empty
	20, // 37: com.github.Jille.billy_grpc.BillyService.ReadDir:output_type -> com.github.Jille.billy_grpc.ReadDirResponse
	32, // 38: com.github.Jille.billy_grpc.BillyService.MkdirAll:output_type -> google.protobuf.Empty
	32, // 39: com.github.Jille.billy_grpc.BillyService.Chmod:output_type -> google.protobuf.Empty
	32, // 40: com.github.Jille.billy_grpc.BillyService.Lchown:output_type -> google.protobuf.Empty
	32, // 41: com.github.Jille.billy_grpc.BillyService.Chown:output_type -> google.protobuf.Empty
	32, // 42: com.github.Jille.billy_grpc.BillyService.Chtimes:output_type -> google.protobuf.Empty
	22, // 43: com.github.Jille.billy_grpc.BillyService.Lstat:output_type -> com.github.Jille.billy_grpc.StatResponse
	32, // 44: com.github.Jille.billy_grpc.BillyService.Symlink:output_type -> google.protobuf.Empty
	28, // 45: com.github.Jille.billy_grpc.BillyService.Readlink:output_type -> com.github.Jille.billy_grpc.ReadlinkResponse
	33, // [33:46] is the sub-list for method output_type
	20, // [20:33] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_billy_proto_init() }
func file_billy_proto_init() {
	if File_billy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_billy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDescriptorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDescriptorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteAtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeekRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeekResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MkdirAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChmodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChtimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymlinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadlinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billy_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadlinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_billy_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FileDescriptorRequest_Open)(nil),
		(*FileDescriptorRequest_Close)(nil),
		(*FileDescriptorRequest_Read)(nil),
		(*FileDescriptorRequest_ReadAt)(nil),
		(*FileDescriptorRequest_Write)(nil),
		(*FileDescriptorRequest_WriteAt)(nil),
		(*FileDescriptorRequest_Seek)(nil),
		(*FileDescriptorRequest_Lock)(nil),
		(*FileDescriptorRequest_Unlock)(nil),
		(*FileDescriptorRequest_Truncate)(nil),
	}
	file_billy_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*FileDescriptorResponse_Read)(nil),
		(*FileDescriptorResponse_Write)(nil),
		(*FileDescriptorResponse_Seek)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_billy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_billy_proto_goTypes,
		DependencyIndexes: file_billy_proto_depIdxs,
		EnumInfos:         file_billy_proto_enumTypes,
		MessageInfos:      file_billy_proto_msgTypes,
	}.Build()
	File_billy_proto = out.File
	file_billy_proto_rawDesc = nil
	file_billy_proto_goTypes = nil
	file_billy_proto_depIdxs = nil
}
